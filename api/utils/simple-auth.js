/**
 * üîí ÂÄã‰∫∫Âà©Áî®Âêë„Åë„Ç∑„É≥„Éó„É´Ë™çË®º
 * Áí∞Â¢ÉÂ§âÊï∞„Å´„Çà„ÇãÁ∞°Âçò„Å™„Ç¢„ÇØ„Çª„ÇπÂà∂Âæ°
 */

/**
 * ÂÄã‰∫∫Âà©Áî®„ÅÆ„Åü„ÇÅ„ÅÆÁ∞°Âçò„Å™Ë™çË®º„ÉÅ„Çß„ÉÉ„ÇØ
 */
function checkPersonalAccess(req) {
  // Áí∞Â¢ÉÂ§âÊï∞„Åß„Ç¢„ÇØ„Çª„ÇπÂà∂Âæ°Ôºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
  const ACCESS_KEY = process.env.PERSONAL_ACCESS_KEY;
  
  // „Ç¢„ÇØ„Çª„Çπ„Ç≠„Éº„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØË™çË®º„Å™„Åó
  if (!ACCESS_KEY) {
    return { allowed: true, message: 'Open access' };
  }
  
  // „ÇØ„Ç®„É™„Éë„É©„É°„Éº„Çø„Åæ„Åü„ÅØ„Éò„ÉÉ„ÉÄ„Éº„Åß„Ç≠„Éº„ÇíÁ¢∫Ë™ç
  const providedKey = req.query.key || req.headers['x-access-key'];
  
  if (providedKey === ACCESS_KEY) {
    return { allowed: true, message: 'Access granted' };
  }
  
  return { 
    allowed: false, 
    reason: '„Ç¢„ÇØ„Çª„Çπ„ÅåÊãíÂê¶„Åï„Çå„Åæ„Åó„Åü„ÄÇÊ≠£„Åó„ÅÑ„Ç≠„Éº„ÇíÊåáÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
    status: 401
  };
}

/**
 * Êó•Ê¨°‰ΩøÁî®Èáè„ÉÅ„Çß„ÉÉ„ÇØÔºà„É°„É¢„É™„É™„Éº„ÇØÂØæÁ≠ñÁâàÔºâ
 */
const dailyUsage = new Map();
const CLEANUP_INTERVAL = 24 * 60 * 60 * 1000; // 24ÊôÇÈñì
let cleanupTimer = null;

// „É°„É¢„É™„É™„Éº„ÇØÈò≤Ê≠¢„ÅÆ„Åü„ÇÅ„ÅÆËá™Âãï„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
function startCleanupTimer() {
  if (cleanupTimer) return;
  
  cleanupTimer = setInterval(() => {
    const yesterday = new Date();
    yesterday.setDate(yesterday.getDate() - 1);
    const yesterdayString = yesterday.toDateString();
    
    // Âè§„ÅÑ„Ç®„É≥„Éà„É™„ÇíÂâäÈô§
    for (const [key] of dailyUsage) {
      const keyDate = key.split('_').slice(1).join('_');
      if (keyDate !== new Date().toDateString()) {
        dailyUsage.delete(key);
      }
    }
  }, CLEANUP_INTERVAL);
  
  // Node.js„Éó„É≠„Çª„ÇπÁµÇ‰∫ÜÊôÇ„Å´„Çø„Ç§„Éû„Éº„Çí„ÇØ„É™„Ç¢
  if (typeof process !== 'undefined') {
    process.on('exit', () => {
      if (cleanupTimer) {
        clearInterval(cleanupTimer);
        cleanupTimer = null;
      }
    });
  }
}

// ÂàùÂõûÂÆüË°åÊôÇ„Å´„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó„Çø„Ç§„Éû„Éº„ÇíÈñãÂßã
startCleanupTimer();

function checkDailyUsage(identifier = 'personal') {
  const today = new Date().toDateString();
  const key = `${identifier}_${today}`;
  
  const currentUsage = dailyUsage.get(key) || 0;
  const MAX_DAILY_REQUESTS = 100; // 1Êó•100Âõû„Åæ„Åß
  
  if (currentUsage >= MAX_DAILY_REQUESTS) {
    return {
      allowed: false,
      reason: `1Êó•„ÅÆ‰ΩøÁî®Âà∂ÈôêÔºà${MAX_DAILY_REQUESTS}ÂõûÔºâ„Å´ÈÅî„Åó„Åæ„Åó„Åü„ÄÇ`,
      currentUsage,
      resetTime: '24ÊôÇÈñìÂæå'
    };
  }
  
  // ‰ΩøÁî®ÂõûÊï∞„ÇíÂ¢óÂä†
  dailyUsage.set(key, currentUsage + 1);
  
  // „É°„É¢„É™‰ΩøÁî®Èáè„ÅÆÁõ£Ë¶ñÔºà„Éá„Éê„ÉÉ„Ç∞Áî®Ôºâ
  if (dailyUsage.size > 100) {
    console.warn(`[simple-auth] Warning: dailyUsage Map size is ${dailyUsage.size}`);
  }
  
  return {
    allowed: true,
    currentUsage: currentUsage + 1,
    remaining: MAX_DAILY_REQUESTS - currentUsage - 1
  };
}

// CommonJSÂΩ¢Âºè„Åß„Ç®„ÇØ„Çπ„Éù„Éº„Éà
module.exports = {
  checkPersonalAccess,
  checkDailyUsage
};